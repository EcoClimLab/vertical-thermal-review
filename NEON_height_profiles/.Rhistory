# # }
#
# if(i==1){
#   assign(paste0("wind", "_plot"), graph)
# } else {
#   assign(paste0(dp$data[[i]], "_plot"), graph)
# }
# print(graph)
}
?ggarrange
library(ggpubr)
?ggarrange
ggarrange(plots, nrow=2)
ggarrange(plots[1],plots[2],plots[3],plots[4],plots[5],plots[6],
nrow=2, common.legend=TRUE)
ggarrange(plots[1],plots[2],plots[3],plots[4],plots[5],plots[6],
nrow=2)
plots[1]
plots <- list()
for(i in 1:length(dp[,name])){
var <- as.data.table(full_data[names(full_data) == dp[,name][i]])
colnames(var) <-
gsub(paste0(dp[,name][i], "."), "",
colnames(var))
#change colnames for SWIR so that the variable name is in the colnames
if(i==6){ #SWIR
setnames(var, old="inLWMean", new="SWIR")
}
# if(dp[,data][i] == "IRBT"){
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30_minute."), "",
#          colnames(var))
# } else if(dp[,data][i] %in% c("2DWSD", "RH", "SAAT")){
#   colnames(var) <-
#     gsub(paste0(dp[,name][i], "."), "",
#          colnames(var))
# } else {
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30min."), "",
#          colnames(var))
# }
#get daily min/max by vertical position
test <- var[, day := as.Date(startDateTime)
][, .(day_max = max(get(dp[,name][i]), na.rm=TRUE),
day_min = min(get(dp[,name][i]), na.rm=TRUE)),
by = .(day, verticalPosition)
][, `:=` (day_max = ifelse(day_max %in% c(-Inf, Inf), NA, day_max),
day_min = ifelse(day_min %in% c(-Inf, Inf), NA, day_min))
][, `:=` (month_num = month(day),
yr = year(day))
]
stat <- test[, `:=` (mmax = mean(day_max, na.rm=TRUE),
mmin = mean(day_min, na.rm=TRUE),
sd_max = sd(day_max, na.rm=TRUE),
sd_min = sd(day_min, na.rm=TRUE))]
#get mean change of max/min variable by height by month by year
newt <- test[, `:=` (delta_max = day_max - day_max[1],
delta_min = day_min - day_min[1]),
by = .(day)
][, .(delta_max_mean = round(mean(delta_max, na.rm=TRUE),2),
delta_min_mean = round(mean(delta_min, na.rm=TRUE),2),
delta_max_sd = round(sd(delta_max, na.rm=TRUE),2),
delta_min_sd = round(sd(delta_min, na.rm=TRUE),2)),
by = .(verticalPosition, month_num)
][order(month_num, verticalPosition),
][, `:=` (delta_max_mean =
ifelse(is.nan(delta_max_mean), NA, delta_max_mean),
delta_min_mean =
ifelse(is.nan(delta_min_mean), NA, delta_min_mean))]
## bring in normalized height
whei <- newt[, norm_height :=
round(verticalPosition / meta[SITE ==j, DistZaxsCnpy], 2)
][, month_char := ifelse(month_num==1, "January", "July")]
#plot
graph <- ggplot(whei) +
scale_color_manual(values = c("darkorange", "red"),
name = "Month") +
geom_hline(yintercept=1, linetype="dotted") +
geom_point(aes(x = delta_max_mean, y = norm_height, color = month_char),
shape=19) +
geom_point(aes(x = delta_min_mean, y = norm_height, color = month_char),
shape=17) +
geom_path(aes(x = delta_max_mean, y = norm_height, color = month_char,
linetype = "Max"), size = 1) +
geom_path(aes(x = delta_min_mean, y = norm_height, color = month_char,
linetype = "Min"), size = 1) +
ggplot2::geom_errorbarh(aes(xmin = delta_max_mean - delta_min_sd,
xmax = delta_max_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Max", height=0.1)) +
ggplot2::geom_errorbarh(aes(xmin=delta_min_mean - delta_min_sd,
xmax=delta_min_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Min", height=0.1)) +
labs(x = expression(paste(Delta, "Climate Variable")),
y = "Normalized Height") +
ylim(0, 2) +
ggtitle(dp[,name][i])
# scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits=c(0,60)) +
theme_bw() +
guides(linetype = guide_legend("Line type"))
plots[i] <- print(graph)
# if(i != 1){
#   graph <- graph + theme(axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y = element_blank())
# }
#
# if(i == 2){
#   graph <- graph + scale_x_continuous(breaks=c(40,60,80,100))
# }
#
# if(i == 3){
#   graph <-
#     graph +
#     labs(x= expression(paste("T"["air"], " [",degree,"C]"))) +
#     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# }
#
# # if(i == 4){
# #   graph <-
# #     graph +
# #     labs(x = expression(paste("T"["biological"], " [",degree,"C]"))) +
# #     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# # }
#
# if(i==1){
#   assign(paste0("wind", "_plot"), graph)
# } else {
#   assign(paste0(dp$data[[i]], "_plot"), graph)
# }
# print(graph)
}
ggarrange(plots[1],plots[2],plots[3],plots[4],plots[5],plots[6],
nrow=2, common.legend=TRUE)
View(plots)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]],
nrow=2, common.legend=TRUE)
ggarrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], plots[[6]],
nrow=2)
plots[[1]]
ggarrange(plots[1], plots[[2]], plots[[3]],
plots[[4]], plots[[5]], plots[[6]],
nrow=2)
plots <- list()
for(i in 1:length(dp[,name])){
var <- as.data.table(full_data[names(full_data) == dp[,name][i]])
colnames(var) <-
gsub(paste0(dp[,name][i], "."), "",
colnames(var))
#change colnames for SWIR so that the variable name is in the colnames
if(i==6){ #SWIR
setnames(var, old="inLWMean", new="SWIR")
}
# if(dp[,data][i] == "IRBT"){
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30_minute."), "",
#          colnames(var))
# } else if(dp[,data][i] %in% c("2DWSD", "RH", "SAAT")){
#   colnames(var) <-
#     gsub(paste0(dp[,name][i], "."), "",
#          colnames(var))
# } else {
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30min."), "",
#          colnames(var))
# }
#get daily min/max by vertical position
test <- var[, day := as.Date(startDateTime)
][, .(day_max = max(get(dp[,name][i]), na.rm=TRUE),
day_min = min(get(dp[,name][i]), na.rm=TRUE)),
by = .(day, verticalPosition)
][, `:=` (day_max = ifelse(day_max %in% c(-Inf, Inf), NA, day_max),
day_min = ifelse(day_min %in% c(-Inf, Inf), NA, day_min))
][, `:=` (month_num = month(day),
yr = year(day))
]
stat <- test[, `:=` (mmax = mean(day_max, na.rm=TRUE),
mmin = mean(day_min, na.rm=TRUE),
sd_max = sd(day_max, na.rm=TRUE),
sd_min = sd(day_min, na.rm=TRUE))]
#get mean change of max/min variable by height by month by year
newt <- test[, `:=` (delta_max = day_max - day_max[1],
delta_min = day_min - day_min[1]),
by = .(day)
][, .(delta_max_mean = round(mean(delta_max, na.rm=TRUE),2),
delta_min_mean = round(mean(delta_min, na.rm=TRUE),2),
delta_max_sd = round(sd(delta_max, na.rm=TRUE),2),
delta_min_sd = round(sd(delta_min, na.rm=TRUE),2)),
by = .(verticalPosition, month_num)
][order(month_num, verticalPosition),
][, `:=` (delta_max_mean =
ifelse(is.nan(delta_max_mean), NA, delta_max_mean),
delta_min_mean =
ifelse(is.nan(delta_min_mean), NA, delta_min_mean))]
## bring in normalized height
whei <- newt[, norm_height :=
round(verticalPosition / meta[SITE ==j, DistZaxsCnpy], 2)
][, month_char := ifelse(month_num==1, "January", "July")]
whei <- as.data.frame(whei)
#plot
graph <- ggplot(whei) +
scale_color_manual(values = c("darkorange", "red"),
name = "Month") +
geom_hline(yintercept=1, linetype="dotted") +
geom_point(aes(x = delta_max_mean, y = norm_height, color = month_char),
shape=19) +
geom_point(aes(x = delta_min_mean, y = norm_height, color = month_char),
shape=17) +
geom_path(aes(x = delta_max_mean, y = norm_height, color = month_char,
linetype = "Max"), size = 1) +
geom_path(aes(x = delta_min_mean, y = norm_height, color = month_char,
linetype = "Min"), size = 1) +
ggplot2::geom_errorbarh(aes(xmin = delta_max_mean - delta_min_sd,
xmax = delta_max_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Max", height=0.1)) +
ggplot2::geom_errorbarh(aes(xmin=delta_min_mean - delta_min_sd,
xmax=delta_min_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Min", height=0.1)) +
labs(x = expression(paste(Delta, "Climate Variable")),
y = "Normalized Height") +
ylim(0, 2) +
ggtitle(dp[,name][i])
# scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits=c(0,60)) +
theme_bw() +
guides(linetype = guide_legend("Line type"))
plots[i] <- print(graph)
# if(i != 1){
#   graph <- graph + theme(axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y = element_blank())
# }
#
# if(i == 2){
#   graph <- graph + scale_x_continuous(breaks=c(40,60,80,100))
# }
#
# if(i == 3){
#   graph <-
#     graph +
#     labs(x= expression(paste("T"["air"], " [",degree,"C]"))) +
#     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# }
#
# # if(i == 4){
# #   graph <-
# #     graph +
# #     labs(x = expression(paste("T"["biological"], " [",degree,"C]"))) +
# #     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# # }
#
# if(i==1){
#   assign(paste0("wind", "_plot"), graph)
# } else {
#   assign(paste0(dp$data[[i]], "_plot"), graph)
# }
# print(graph)
}
ggarrange(plots[[1]], plots[[2]], plots[[3]],
plots[[4]], plots[[5]], plots[[6]],
nrow=2)
ggarrange(plots[1], plots[2], plots[3],
plots[4], plots[5], plots[6],
nrow=2)
plots[1]
View(plots)
plots <- list()
for(i in 1:length(dp[,name])){
var <- as.data.table(full_data[names(full_data) == dp[,name][i]])
colnames(var) <-
gsub(paste0(dp[,name][i], "."), "",
colnames(var))
#change colnames for SWIR so that the variable name is in the colnames
if(i==6){ #SWIR
setnames(var, old="inLWMean", new="SWIR")
}
# if(dp[,data][i] == "IRBT"){
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30_minute."), "",
#          colnames(var))
# } else if(dp[,data][i] %in% c("2DWSD", "RH", "SAAT")){
#   colnames(var) <-
#     gsub(paste0(dp[,name][i], "."), "",
#          colnames(var))
# } else {
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30min."), "",
#          colnames(var))
# }
#get daily min/max by vertical position
test <- var[, day := as.Date(startDateTime)
][, .(day_max = max(get(dp[,name][i]), na.rm=TRUE),
day_min = min(get(dp[,name][i]), na.rm=TRUE)),
by = .(day, verticalPosition)
][, `:=` (day_max = ifelse(day_max %in% c(-Inf, Inf), NA, day_max),
day_min = ifelse(day_min %in% c(-Inf, Inf), NA, day_min))
][, `:=` (month_num = month(day),
yr = year(day))
]
stat <- test[, `:=` (mmax = mean(day_max, na.rm=TRUE),
mmin = mean(day_min, na.rm=TRUE),
sd_max = sd(day_max, na.rm=TRUE),
sd_min = sd(day_min, na.rm=TRUE))]
#get mean change of max/min variable by height by month by year
newt <- test[, `:=` (delta_max = day_max - day_max[1],
delta_min = day_min - day_min[1]),
by = .(day)
][, .(delta_max_mean = round(mean(delta_max, na.rm=TRUE),2),
delta_min_mean = round(mean(delta_min, na.rm=TRUE),2),
delta_max_sd = round(sd(delta_max, na.rm=TRUE),2),
delta_min_sd = round(sd(delta_min, na.rm=TRUE),2)),
by = .(verticalPosition, month_num)
][order(month_num, verticalPosition),
][, `:=` (delta_max_mean =
ifelse(is.nan(delta_max_mean), NA, delta_max_mean),
delta_min_mean =
ifelse(is.nan(delta_min_mean), NA, delta_min_mean))]
## bring in normalized height
whei <- newt[, norm_height :=
round(verticalPosition / meta[SITE ==j, DistZaxsCnpy], 2)
][, month_char := ifelse(month_num==1, "January", "July")]
#plot
graph <- ggplot(whei) +
scale_color_manual(values = c("darkorange", "red"),
name = "Month") +
geom_hline(yintercept=1, linetype="dotted") +
geom_point(aes(x = delta_max_mean, y = norm_height, color = month_char),
shape=19) +
geom_point(aes(x = delta_min_mean, y = norm_height, color = month_char),
shape=17) +
geom_path(aes(x = delta_max_mean, y = norm_height, color = month_char,
linetype = "Max"), size = 1) +
geom_path(aes(x = delta_min_mean, y = norm_height, color = month_char,
linetype = "Min"), size = 1) +
ggplot2::geom_errorbarh(aes(xmin = delta_max_mean - delta_min_sd,
xmax = delta_max_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Max", height=0.1)) +
ggplot2::geom_errorbarh(aes(xmin=delta_min_mean - delta_min_sd,
xmax=delta_min_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Min", height=0.1)) +
labs(x = expression(paste(Delta, "Climate Variable")),
y = "Normalized Height") +
ylim(0, 2) +
ggtitle(dp[,name][i])
# scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits=c(0,60)) +
theme_bw() +
guides(linetype = guide_legend("Line type"))
plots[i] <- graph
# if(i != 1){
#   graph <- graph + theme(axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y = element_blank())
# }
#
# if(i == 2){
#   graph <- graph + scale_x_continuous(breaks=c(40,60,80,100))
# }
#
# if(i == 3){
#   graph <-
#     graph +
#     labs(x= expression(paste("T"["air"], " [",degree,"C]"))) +
#     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# }
#
# # if(i == 4){
# #   graph <-
# #     graph +
# #     labs(x = expression(paste("T"["biological"], " [",degree,"C]"))) +
# #     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# # }
#
# if(i==1){
#   assign(paste0("wind", "_plot"), graph)
# } else {
#   assign(paste0(dp$data[[i]], "_plot"), graph)
# }
# print(graph)
}
ggarrange(plots[1], plots[2], plots[3],
plots[4], plots[5], plots[6],
nrow=2)
View(plots)
View(plots)
plots <- list()
for(i in 1:length(dp[,name])){
var <- as.data.table(full_data[names(full_data) == dp[,name][i]])
colnames(var) <-
gsub(paste0(dp[,name][i], "."), "",
colnames(var))
#change colnames for SWIR so that the variable name is in the colnames
if(i==6){ #SWIR
setnames(var, old="inLWMean", new="SWIR")
}
# if(dp[,data][i] == "IRBT"){
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30_minute."), "",
#          colnames(var))
# } else if(dp[,data][i] %in% c("2DWSD", "RH", "SAAT")){
#   colnames(var) <-
#     gsub(paste0(dp[,name][i], "."), "",
#          colnames(var))
# } else {
#   colnames(var) <-
#     gsub(paste0(dp[,data][i], "_30min."), "",
#          colnames(var))
# }
#get daily min/max by vertical position
test <- var[, day := as.Date(startDateTime)
][, .(day_max = max(get(dp[,name][i]), na.rm=TRUE),
day_min = min(get(dp[,name][i]), na.rm=TRUE)),
by = .(day, verticalPosition)
][, `:=` (day_max = ifelse(day_max %in% c(-Inf, Inf), NA, day_max),
day_min = ifelse(day_min %in% c(-Inf, Inf), NA, day_min))
][, `:=` (month_num = month(day),
yr = year(day))
]
stat <- test[, `:=` (mmax = mean(day_max, na.rm=TRUE),
mmin = mean(day_min, na.rm=TRUE),
sd_max = sd(day_max, na.rm=TRUE),
sd_min = sd(day_min, na.rm=TRUE))]
#get mean change of max/min variable by height by month by year
newt <- test[, `:=` (delta_max = day_max - day_max[1],
delta_min = day_min - day_min[1]),
by = .(day)
][, .(delta_max_mean = round(mean(delta_max, na.rm=TRUE),2),
delta_min_mean = round(mean(delta_min, na.rm=TRUE),2),
delta_max_sd = round(sd(delta_max, na.rm=TRUE),2),
delta_min_sd = round(sd(delta_min, na.rm=TRUE),2)),
by = .(verticalPosition, month_num)
][order(month_num, verticalPosition),
][, `:=` (delta_max_mean =
ifelse(is.nan(delta_max_mean), NA, delta_max_mean),
delta_min_mean =
ifelse(is.nan(delta_min_mean), NA, delta_min_mean))]
## bring in normalized height
whei <- newt[, norm_height :=
round(verticalPosition / meta[SITE ==j, DistZaxsCnpy], 2)
][, month_char := ifelse(month_num==1, "January", "July")]
#plot
plots[[i]] <- local({
graph <- ggplot(whei) +
scale_color_manual(values = c("darkorange", "red"),
name = "Month") +
geom_hline(yintercept=1, linetype="dotted") +
geom_point(aes(x = delta_max_mean, y = norm_height, color = month_char),
shape=19) +
geom_point(aes(x = delta_min_mean, y = norm_height, color = month_char),
shape=17) +
geom_path(aes(x = delta_max_mean, y = norm_height, color = month_char,
linetype = "Max"), size = 1) +
geom_path(aes(x = delta_min_mean, y = norm_height, color = month_char,
linetype = "Min"), size = 1) +
ggplot2::geom_errorbarh(aes(xmin = delta_max_mean - delta_min_sd,
xmax = delta_max_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Max", height=0.1)) +
ggplot2::geom_errorbarh(aes(xmin=delta_min_mean - delta_min_sd,
xmax=delta_min_mean + delta_max_sd,
y=norm_height, color = month_char,
linetype = "Min", height=0.1)) +
labs(x = expression(paste(Delta, "Climate Variable")),
y = "Normalized Height") +
ylim(0, 2) +
ggtitle(dp[,name][i])
# scale_y_continuous(breaks = scales::pretty_breaks(n = 6), limits=c(0,60)) +
theme_bw() +
guides(linetype = guide_legend("Line type"))
print(graph)
})
# if(i != 1){
#   graph <- graph + theme(axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y = element_blank())
# }
#
# if(i == 2){
#   graph <- graph + scale_x_continuous(breaks=c(40,60,80,100))
# }
#
# if(i == 3){
#   graph <-
#     graph +
#     labs(x= expression(paste("T"["air"], " [",degree,"C]"))) +
#     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# }
#
# # if(i == 4){
# #   graph <-
# #     graph +
# #     labs(x = expression(paste("T"["biological"], " [",degree,"C]"))) +
# #     scale_x_continuous(breaks=c(10,20,30), limits=c(5,35))
# # }
#
# if(i==1){
#   assign(paste0("wind", "_plot"), graph)
# } else {
#   assign(paste0(dp$data[[i]], "_plot"), graph)
# }
# print(graph)
}
ggarrange(plots[1], plots[2], plots[3],
plots[4], plots[5], plots[6],
nrow=2)
View(plots)
plots[1]
plots[[1]]
ggarrange(plots[[1]], plots[[2]], plots[[3]],
plots[[4]], plots[[5]], plots[[6]],
nrow=2)
ggarrange(plots[[1]], plots[[2]], plots[[3]],
plots[[4]], plots[[5]], plots[[6]],
nrow=2, ncol=3)
ggarrange(plots[[1]], plots[[2]], plots[[3]],
plots[[4]], plots[[5]], plots[[6]],
nrow=2, ncol=3, common.legend=TRUE)
