#how big the dowloads are)
startdate=paste0(date[,year][j], "-0", date[,month][j]),
enddate=paste0(date[,year][j], "-0", date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "."), "", colnames(neon_data))
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
names(vars[i]) <- dp[,name][i]
}
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0", date[,month][j]),
enddate=paste0(date[,year][j], "-0", date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "."), "", colnames(neon_data))
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
names(vars[i]) <- dp[,name][i]
}
View(vars)
View(vars)
names(vars[i])
View(dp)
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
View(neon_data)
i=3
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
View(neon_data)
i=4
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0", date[,month][j]),
enddate=paste0(date[,year][j], "-0", date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
View(neon_tower)
dp <- data.table(data = c("2DWSD", "RH", "SAAT",
"IRBT"),
id = c("DP1.00001.001", "DP1.00098.001",
"DP1.00002.001", "DP1.00005.001"),
name = c("windSpeedMean", "RHMean",
"tempSingleMean", "bioTempMean"),
xlabs = c("Wind speed [m/s]", "RH [%]",
"Mean Air Temperature [째C]",
"Mean Infrared Biological Temperature [째C]"))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "", colnames(neon_data))
colnames(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
}
colnames(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
}
colnames(neon_data)
View(neon_data)
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
View(neon_tower)
View(neon_data)
dp[,data][i] == "IRBT"
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
names(neon_data)
View(vars)
View(dp)
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
names(neon_data)
i=3
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
View(neon_data)
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else if(dp[,data][i] == "2DWSD"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
names(vars) <- dp[,name]
View(vars)
sites <- c("BART","BONA","CLBJ","DEJU","DELA","GRSM","GUAN","HARV","JERC",
"LENO","MLBS","ORNL","OSBS","SCBI","SERC","SJER","SOAP","STEI",
"TALL","TEAK","TREE","UKFS","UNDE","WREF","YELL")
site_data <- lapply(sites, function(x){
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
startdate=paste0(date[,year][j], "-0",
date[,month][j]),
enddate=paste0(date[,year][j], "-0",
date[,month][j]))
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else if(dp[,data][i] == "2DWSD"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[, .(verticalPosition, startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
names(vars) <- dp[,name]
return(vars)
})
?month
View(neon_data_all)
month(neon_data_all[,startDateTime])
i=1
x <- "SCBI"
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
#(use TRUE outside loop to see
#how big the dowloads are)
)
dp <- data.table(data = c("2DWSD", "RH", "SAAT",
"IRBT"),
id = c("DP1.00001.001", "DP1.00098.001",
"DP1.00002.001", "DP1.00005.001"),
name = c("windSpeedMean", "RHMean",
"tempSingleMean", "bioTempMean"),
xlabs = c("Wind speed [m/s]", "RH [%]",
"Mean Air Temperature [째C]",
"Mean Infrared Biological Temperature [째C]"))
date <- data.table("year" = c(rep(2016, 2), rep(2017, 2),
rep(2018, 2), rep(2019, 2),
rep(2020, 2)),
"month" = c(rep(c(1,7), 5)))
######################################################
# Purpose: Create vertical profiles of climate variables for ForestGEO plot using NEON tower data
# Developed by: Ian McGregor, contact Anderson-Teixeira (teixeirak@si.edu)
# R version 3.5.3 - First created May 2019, updated for vertical-thermal-rv
## Aug-Sept. 2020
######################################################
library(neonUtilities)
library(lubridate)
dp <- data.table(data = c("2DWSD", "RH", "SAAT",
"IRBT"),
id = c("DP1.00001.001", "DP1.00098.001",
"DP1.00002.001", "DP1.00005.001"),
name = c("windSpeedMean", "RHMean",
"tempSingleMean", "bioTempMean"),
xlabs = c("Wind speed [m/s]", "RH [%]",
"Mean Air Temperature [째C]",
"Mean Infrared Biological Temperature [째C]"))
library(data.table)
dp <- data.table(data = c("2DWSD", "RH", "SAAT",
"IRBT"),
id = c("DP1.00001.001", "DP1.00098.001",
"DP1.00002.001", "DP1.00005.001"),
name = c("windSpeedMean", "RHMean",
"tempSingleMean", "bioTempMean"),
xlabs = c("Wind speed [m/s]", "RH [%]",
"Mean Air Temperature [째C]",
"Mean Infrared Biological Temperature [째C]"))
date <- data.table("year" = c(rep(2016, 2), rep(2017, 2),
rep(2018, 2), rep(2019, 2),
rep(2020, 2)),
"month" = c(rep(c(1,7), 5)))
years <- c("2016", "2017", "2018", "2019", "2020")
x <- "SCBI"
x <- "DCBI"
x <- "SCBI"
i=1
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
nCores = 2
#(use TRUE outside loop to see
#how big the dowloads are)
)
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else if(dp[,data][i] == "2DWSD"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[month(startDateTime) %in% c(1,7),
.(verticalPosition,
startDateTime,
get(dp[,name][i]))]
View(neon_data)
sites <- c("BART","BONA","CLBJ","DEJU","DELA","GRSM","GUAN","HARV","JERC",
"LENO","MLBS","ORNL","OSBS","SCBI","SERC","SJER","SOAP","STEI",
"TALL","TEAK","TREE","UKFS","UNDE","WREF","YELL")
site_data <- lapply(sites, function(x){
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
nCores = 2
#(use TRUE outside loop to see
#how big the dowloads are)
)
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else if(dp[,data][i] == "2DWSD"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[month(startDateTime) %in% c(1,7),
.(verticalPosition,
startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
names(vars) <- dp[,name]
return(vars)
})
date <- data.table("year" = c(rep(2019, 2)),
"month" = c(rep(c(1,7), 1)))
rm(i)
rm(x)
years <- c("2019")
sites <- c("BART","BONA","CLBJ","DEJU","DELA","GRSM","GUAN","HARV","JERC",
"LENO","MLBS","ORNL","OSBS","SCBI","SERC","SJER","SOAP","STEI",
"TALL","TEAK","TREE","UKFS","UNDE","WREF","YELL")
site_data <- lapply(sites, function(x){
vars <- list()
for (i in seq(along=dp[,name])){
neon_data_all <- NULL
for (j in seq(1:nrow(date))){
neon_tower <-
loadByProduct(dpID=dp[,id][i],
site=x,
package="basic",
check.size = FALSE, avg=30,
nCores = 2
#(use TRUE outside loop to see
#how big the dowloads are)
)
neon_data <- neon_tower[grepl(dp[,data][i], names(neon_tower))]
neon_data <- as.data.table(neon_data)
if(dp[,data][i] == "IRBT"){
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30_minute."), "",
colnames(neon_data))
} else if(dp[,data][i] == "2DWSD"){
colnames(neon_data) <-
gsub(paste0("X", dp[,data][i], "_30min."), "",
colnames(neon_data))
} else {
colnames(neon_data) <-
gsub(paste0(dp[,data][i], "_30min."), "",
colnames(neon_data))
}
neon_data$verticalPosition <- as.numeric(neon_data$verticalPosition)
#filter neon_data and add day column
neon_data <- neon_data[month(startDateTime) %in% c(1,7),
.(verticalPosition,
startDateTime,
get(dp[,name][i]))]
names(neon_data)[3] <- dp[,name][i]
neon_data_all <- rbind(neon_data_all, neon_data)
}
vars[[i]] <- neon_data_all
}
names(vars) <- dp[,name]
return(vars)
})
